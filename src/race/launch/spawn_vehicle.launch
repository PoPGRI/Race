<!-- -->
<launch>
  <!-- Ego vehicle -->
  <arg name='host' default='localhost'/>
  <arg name='port' default='2000'/>
  <arg name='role_name' default='ego_vehicle'/>
  <arg name='config_file' default=''/>
  <arg name="vehicle_filter" default='vehicle.*'/>
  <arg name="spawn_point" default=""/><!-- use comma separated format "x,y,z,roll,pitch,yaw" -->
  <arg name="track" default="t1_triple" />
  <arg name="model_free" default="1" />
  <arg name="offscreen" default="false" />
  <arg name="scenario" default="true" />

  <!-- the ego vehicle, that will be controlled by an agent (e.g. carla_ad_agent) -->
  <include file="$(find carla_spawn_objects)/launch/carla_example_ego_vehicle.launch">
    <arg name="objects_definition_file" value='$(arg config_file)'/>
    <arg name='role_name' value='$(arg role_name)'/>
    <arg name="spawn_point_ego_vehicle" value="$(arg spawn_point)"/>
    <arg name="spawn_sensors_only" value="false"/>
  </include>

  <!-- the control bridge -->
  <!-- carla manual control -->
  <node pkg="race" type="carla_manual_control.py" name="carla_manual_control_$(arg role_name)" output="screen" unless="$(arg offscreen)">
    <param name="role_name" value="$(arg role_name)"/>
  </node>

  <node pkg="race" type="video_output.py" name="video_output_$(arg role_name)" output="screen">
    <param name="role_name" value="$(arg role_name)"/>
  </node>

  <!-- <node pkg="race" type="baseline.py" name="baseline_controller_$(arg role_name)" output="screen">
    <param name="role_name" value="$(arg role_name)"/>
  </node> -->

  <!-- control nodes -->
  <include file="$(find carla_ackermann_control)/launch/carla_ackermann_control.launch">
    <arg name='role_name' value='$(arg role_name)' />
  </include>

  <group if="$(arg scenario)">
    <include file="$(find scenario_node)/launch/scenario_node.launch">
      <arg name='host' value='$(arg host)'/>
      <arg name='port' value='$(arg port)'/>
      <arg name='role_name' value='$(arg role_name)' />
      <arg name='track' value='$(arg track)' />
    </include>
  </group>

  <group if="$(arg model_free)">
    <include file="$(find ackermann_node)/launch/ackermann_node.launch">
      <arg name='role_name' value='$(arg role_name)' />
    </include>

    <include file="$(find control_node)/launch/control_node.launch">
      <arg name='role_name' value='$(arg role_name)' />
    </include>
  </group>

  <include file="$(find model_based_node)/launch/model_based_node.launch" unless="$(eval arg('model_free') > 0)">
    <arg name='role_name' value='$(arg role_name)' />
    <arg name='host' value='$(arg host)' />
    <arg name='port' value='$(arg port)' />
  </include>

  <!-- the perception module -->
  <!-- graic race info -->
  <include file="$(find graic_raceinfo_publisher)/launch/graic_raceinfo_publisher.launch">
    <arg name='role_name' value='$(arg role_name)' />
    <arg name='host' value='$(arg host)' />
    <arg name='port' value='$(arg port)' />
  </include>

  <include file="$(find location_publisher)/launch/location_publisher.launch">
    <arg name='role_name' value='$(arg role_name)' />
    <arg name='host' value='$(arg host)' />
    <arg name='port' value='$(arg port)' />
  </include>

  <!-- <include file="$(find envobj_bb_publisher)/launch/envobj_bb_publisher.launch">
    <arg name='role_name' value='$(arg role_name)' />
  </include> -->

  <!-- the evaluation module -->
  <include file="$(find evaluation_node)/launch/evaluation_node.launch">
    <arg name='host' value='$(arg host)' />
    <arg name='port' value='$(arg port)' />
    <arg name='role_name' value='$(arg role_name)' />
    <arg name='track' value='$(arg track)' />
    <arg name='model_free' value='$(arg model_free)' />
  </include>

  <include file="$(find waypoint_node)/launch/waypoint_node.launch">
    <arg name='host' value='$(arg host)' />
    <arg name='port' value='$(arg port)' />
    <arg name='role_name' value='$(arg role_name)' />
    <arg name='track' value='$(arg track)' />
  </include>


</launch>